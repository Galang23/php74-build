# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: mkdir home
        run: | 
            sudo useradd -m anjay      
            
      - name: Install dependencies
        run: |
            sudo apt update
            sudo apt -y install libfcgi-dev libfcgi0ldbl libjpeg-turbo8-dev libmcrypt-dev libssl-dev libc-client2007e libc-client2007e-dev libxml2-dev libbz2-dev libcurl4-openssl-dev libjpeg-dev libpng-dev libfreetype6-dev libkrb5-dev libpq-dev libxml2-dev libxslt1-dev libzip-dev libsqlite3-dev libonig-dev libwebp-dev
            sudo ln -s /usr/lib/libc-client.a /usr/lib/x86_64-linux-gnu/libc-client.a
            cd /usr/include
            sudo ln -s x86_64-linux-gnu/curl
      
      - name: Download PHP 7.4.21 source
        run: |
            cd /tmp
            wget https://www.php.net/distributions/php-7.4.21.tar.gz
            echo $PWD
            ls -lah
            
      - name: extract php
        run: |
            cd /tmp
            echo $PWD
            tar -xf php-7.4.21.tar.gz
            ls -lah
            
      - name: CD to dir
        run: cd /tmp/php-7.4.21
      
      - name: Configure...
        run: /tmp/php-7.4.21/configure --prefix=/home/anjay/opt/php7.4 --with-pdo-pgsql --with-pdo-mysql --with-mysqli --with-mysql-sock=$HOME/.local/tmp/mysqld.sock --with-zlib-dir --with-freetype --enable-mbstring --enable-soap --enable-calendar --with-curl --with-zlib --enable-gd --with-jpeg --with-webp --with-pgsql --disable-rpath --enable-inline-optimization --with-bz2 --with-zlib --enable-sockets --enable-sysvsem --enable-sysvshm --enable-pcntl --enable-mbregex --enable-exif --enable-bcmath --with-mhash --with-zip --with-jpeg --with-openssl --enable-ftp --with-imap --with-imap-ssl --with-kerberos --with-gettext --with-xmlrpc --with-xsl --enable-opcache --enable-intl --with-pear --enable-fpm
      
      - name: Compile..
        run: make -j4 && sudo make install
      
      - name: Penyesuaian
        run: |
            echo $PWD
            cd /tmp/php-7.4.21
            echo $PWD
            cp php.ini-production /home/anjay/opt/php7.4/lib/php.ini
            cp /home/anjay/opt/php7.4/etc/php-fpm.conf.default /home/anjay/opt/php7.4/etc/php-fpm.conf
            cp /home/anjay/opt/php7.4/etc/php-fpm.d/www.conf.default /home/anjay/opt/php7.4/etc/php-fpm.d/www.conf
            sed -i 's/;pid = run\/php-fpm.pid/pid = run\/php-fpm.pid/g' /home/anjay/opt/php7.4/etc/php-fpm.conf
            sed -i 's/;date.timezone =/date.timezone = "Europe\/Berlin"/g' /home/anjay/opt/php7.4/lib/php.ini
            sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /home/anjay/opt/php7.4/lib/php.ini
            
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: Artifact for PHP7.4 # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/anjay/opt/php7.4
          # The desired behavior if no files are found using the provided path.
          #Available Options:
            #warn: Output a warning but do not fail the action
            #error: Fail the action with an error message
            #ignore: Do not output any warnings or errors, the action does not fail

          if-no-files-found: warn # optional, default is warn
        # Duration after which artifact will expire in days. 0 means using default retention.
        #Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

          retention-days: 3 # optional
